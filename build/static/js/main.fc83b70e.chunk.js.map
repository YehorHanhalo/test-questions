{"version":3,"sources":["App.tsx","components/Div/Div.tsx","reportWebVitals.ts","index.tsx","components/Div/Div.module.css","App.module.css"],"names":["divHeight","Div","useState","window","innerWidth","screenWidth","setScreenWidth","getWindowWidth","useEffect","addEventListener","removeEventListener","divRef","useRef","rootDivHeight","setRootDivHeight","handleKeyPress","useCallback","e","includes","key","prev","String","handleKeyDown","code","inputString","slice","length","useLayoutEffect","current","heightWithPx","getComputedStyle","height","parseInt","divInlineStyle","ref","className","styles","divStep1","style","value","onKeyPress","onKeyDown","setDivHeight","App","section","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uJASIA,E,sEC8DWC,EAhEW,SAAC,GAAmB,IAAjBD,EAAgB,EAAhBA,UAAgB,EAGLE,mBAAiBC,OAAOC,YAHnB,mBAGpCC,EAHoC,KAGvBC,EAHuB,KAKrCC,EAAiB,WACrBD,EAAeH,OAAOC,aAGxBI,qBAAU,WAER,OADAL,OAAOM,iBAAiB,SAAUF,GAC3B,kBAAMJ,OAAOO,oBAAoB,SAAUH,MACjD,IAIH,IAAMI,EAASC,iBAAuB,MAhBK,EAkBDV,mBAAiBF,GAlBhB,mBAkBpCa,EAlBoC,KAkBrBC,EAlBqB,KAoBrCC,EAAiBC,uBAAY,SAACC,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGC,UAAUD,EAAEE,MAC3CL,GAAiB,SAAAM,GAAI,QAAMC,OAAOD,GAAQH,EAAEE,UAEjD,IAEGG,EAAgBN,uBAAY,SAACC,GAChB,cAAXA,EAAEM,MACJT,GAAiB,SAAAM,GACf,IAAMI,EAAcH,OAAOD,GAC3B,OAAQI,EAAYC,MAAM,EAAGD,EAAYE,OAAS,QAGvD,IAEHC,2BAAgB,WACd,GAAIhB,EAAOiB,QAAS,CAClB,IAAMC,EAAeC,iBAAiBnB,EAAOiB,SAASG,OAChDA,EAASC,SAASH,GACxBf,EAAiBiB,MAElB,CAACpB,IAEJ,IAAMsB,EAAiB,CACrBF,OAAQlB,GAIV,OACE,sBACEqB,IAAKvB,EACLwB,UAAWC,IAAOC,SAClBC,MAAOL,EAHT,UAKE,kDAAqB5B,KACrB,uBACEkC,MAAO1B,EACP2B,WAAYzB,EACZ0B,UAAWnB,Q,gBDvDnBnB,OAAOuC,aAAe,SAACX,GAAD,OAAoB/B,EAAY+B,GAcvCY,MAZf,WAGE,OAFAxC,OAAOuC,aAAa,KAGlB,mCACA,yBAASP,UAAWC,IAAOQ,QAA3B,SACE,cAAC,EAAD,CAAK5C,UAAWA,SEJP6C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,QAAU,qBAAqB,SAAW,wB,kBCA5DD,EAAOC,QAAU,CAAC,QAAU,wB","file":"static/js/main.fc83b70e.chunk.js","sourcesContent":["import Div from './components/Div'\nimport styles from './App.module.css';\n\ndeclare global {\n  interface Window {\n    setDivHeight(height: number): void;\n  }\n}\n\nlet divHeight: number;\nwindow.setDivHeight = (height: number) => divHeight = height;\n\nfunction App() {\n  window.setDivHeight(100)\n\n  return (\n    <>\n    <section className={styles.section}>\n      <Div divHeight={divHeight} />\n    </section>\n    </>\n  );\n}\n\nexport default App;\n","import { useState, useEffect, useLayoutEffect, useCallback, useRef, ChangeEvent, KeyboardEvent, FC } from 'react';\nimport styles from './Div.module.css';\n\ninterface DivProps {\n    divHeight: number;\n}\n\nconst Div: FC<DivProps> = ({ divHeight }) => {\n\n  // ========step 1=========\n  const [screenWidth, setScreenWidth] = useState<number>(window.innerWidth)\n\n  const getWindowWidth = () => {\n    setScreenWidth(window.innerWidth)\n  }\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", getWindowWidth)\n    return () => window.removeEventListener(\"resize\", getWindowWidth)\n  }, [])\n  // =======================\n\n  // ========step 2=========\n  const divRef = useRef<HTMLDivElement>(null)\n\n  const [rootDivHeight, setRootDivHeight] = useState<number>(divHeight)\n\n  const handleKeyPress = useCallback((e: KeyboardEvent) => {\n      if ([1, 2, 3, 4, 5, 6, 7, 8, 9, 0].includes(+e.key)) {\n          setRootDivHeight(prev => +(String(prev) + e.key))\n      }\n  }, [])\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n      if (e.code === 'Backspace') {\n        setRootDivHeight(prev => {\n          const inputString = String(prev)\n          return +inputString.slice(0, inputString.length - 1)\n        })\n      }\n  }, [])\n\n  useLayoutEffect(() => {\n    if (divRef.current) {\n      const heightWithPx = getComputedStyle(divRef.current).height\n      const height = parseInt(heightWithPx)\n      setRootDivHeight(height)\n    }\n  }, [divRef])\n\n  const divInlineStyle = {\n    height: rootDivHeight,\n  }\n  // =======================\n\n  return (\n    <div\n      ref={divRef}\n      className={styles.divStep1}\n      style={divInlineStyle}\n    >\n      <span>Screen width: {screenWidth}</span>\n      <input\n        value={rootDivHeight}\n        onKeyPress={handleKeyPress}\n        onKeyDown={handleKeyDown}\n      />\n    </div>\n  );\n}\n\nexport default Div;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Div_section__1Qqoq\",\"divStep1\":\"Div_divStep1__1RFCm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"App_section__1OL6S\"};"],"sourceRoot":""}